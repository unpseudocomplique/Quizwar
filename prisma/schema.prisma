// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Quiz {
  id          String         @id @default(cuid())
  display     String
  isDeleted   Boolean        @default(false)
  isActive    Boolean        @default(true)
  picture     String?
  description String?
  questions   QuizQuestion[]
  Game        Game[]
  themes      QuizTheme[]
}

model Theme {
  id        String      @id @default(cuid())
  display   String
  isDeleted Boolean     @default(false)
  isActive  Boolean     @default(true)
  picture   String?
  quizzes   QuizTheme[]
}

model QuizTheme {
  quizId  String
  themeId String
  quiz    Quiz   @relation(fields: [quizId], references: [id])
  theme   Theme  @relation(fields: [themeId], references: [id])

  @@id([quizId, themeId])
}

model QuizQuestion {
  quizId     String
  questionId String
  quiz       Quiz     @relation(fields: [quizId], references: [id])
  question   Question @relation(fields: [questionId], references: [id])

  @@id([quizId, questionId])
}

model Question {
  id               String          @id @default(cuid())
  display          String
  picture          String?
  promptPicture    String          @default("")
  questionDuration Int             @default(2)
  answerDuration   Int             @default(5)
  isDeleted        Boolean         @default(false)
  isActive         Boolean         @default(true)
  theme            String
  answers          Answer[]
  labels           QuestionLabel[]
  quizzes          QuizQuestion[]
  PlayerAnswer     PlayerAnswer[]
  UsedPower        UsedPower[]
}

model Answer {
  id         String   @id @default(cuid())
  display    String
  selected   Boolean
  isDeleted  Boolean  @default(false)
  isActive   Boolean  @default(true)
  question   Question @relation(fields: [questionId], references: [id])
  questionId String
  isCorrect  Boolean
}

model Label {
  id        String          @id @default(cuid())
  display   String
  isDeleted Boolean         @default(false)
  isActive  Boolean         @default(true)
  questions QuestionLabel[]
}

model QuestionLabel {
  questionId String
  labelId    String
  question   Question @relation(fields: [questionId], references: [id])
  label      Label    @relation(fields: [labelId], references: [id])

  @@id([questionId, labelId])
}

model Game {
  id           String          @id @default(cuid())
  display      String
  quizId       String
  createdAt    DateTime        @default(now())
  isActive     Boolean         @default(true)
  quiz         Quiz            @relation(fields: [quizId], references: [id])
  players      PlayerGame[]
  PlayerAnswer PlayerAnswer[]
  UsedPower    UsedPower[]
  parameters   GameParameter[] // Relation to the new GameParameter model
}

model GameParameter {
  id         String        @id @default(cuid())
  gameId     String
  parameter  ParameterType
  value      String?
  rangeStart Int
  rangeEnd   Int
  game       Game          @relation(fields: [gameId], references: [id])

  @@index([gameId])
}

enum ParameterType {
  FASTER_RESPONSE_MORE_POINTS
  POINTS_X5
}

model Player {
  id             String         @id @default(cuid())
  picture        String
  username       String
  email          String         @unique
  games          PlayerGame[]
  answers        PlayerAnswer[]
  powersUsed     UsedPower[]    @relation("OriginPlayerRelation")
  powersReceived UsedPower[]    @relation("TargetPlayerRelation")
}

model PlayerGame {
  playerId   String
  gameId     String
  isFinished Boolean @default(false)
  gameScore  Decimal @default(0)

  player Player @relation(fields: [playerId], references: [id])
  game   Game   @relation(fields: [gameId], references: [id])

  @@id([playerId, gameId])
}

model PlayerAnswer {
  id         String   @id @default(cuid())
  playerId   String
  questionId String
  gameId     String
  answerIds  String[]
  isCorrect  Boolean
  answeredAt DateTime @default(now())

  player   Player   @relation(fields: [playerId], references: [id])
  question Question @relation(fields: [questionId], references: [id])
  game     Game     @relation(fields: [gameId], references: [id])

  @@unique([playerId, questionId, gameId])
}

enum PowerType {
  FIFTY_FIFTY
  STEAL_POINTS
  BLOCK
  DOUBLE_POINTS
}

model UsedPower {
  id             String    @id @default(cuid())
  power          PowerType
  questionId     String
  gameId         String
  originPlayerId String
  targetPlayerId String?

  question     Question @relation(fields: [questionId], references: [id])
  game         Game     @relation(fields: [gameId], references: [id])
  originPlayer Player   @relation("OriginPlayerRelation", fields: [originPlayerId], references: [id])
  targetPlayer Player?  @relation("TargetPlayerRelation", fields: [targetPlayerId], references: [id])

  createdAt DateTime @default(now())

  @@index([originPlayerId])
  @@index([targetPlayerId])
  @@index([questionId])
  @@index([gameId])
}
